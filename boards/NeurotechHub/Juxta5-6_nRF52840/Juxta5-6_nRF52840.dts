/dts-v1/;
#include <nordic/nrf52840_qiaa.dtsi>
#include "Juxta5-6_nRF52840-pinctrl.dtsi"

/ {
	model = "Juxta5-6_nRF52840";
	compatible = "NeurotechHub,Juxta5-6_nRF52840";

	chosen {
		zephyr,sram = &sram0;
		zephyr,flash = &flash0;
	};

	leds {
		compatible = "gpio-leds";
		led0: led_0 {
			gpios = <&gpio0 15 GPIO_ACTIVE_HIGH>;
			label = "LED 0";
		};
	};

	gpio_keys {
		compatible = "gpio-keys";
		magnet_sensor: magnet_sensor {
			gpios = <&gpio1 11 GPIO_ACTIVE_HIGH>;
			label = "Magnet sensor interrupt";
		};
		accel_int: accel_int {
			gpios = <&gpio0 4 GPIO_ACTIVE_LOW>;
			label = "Accelerometer interrupt 1";
		};
		accel_int2: accel_int2 {
			gpios = <&gpio0 30 GPIO_ACTIVE_LOW>;
			label = "Accelerometer interrupt 2";
		};
	};

	aliases {
		led0 = &led0;
		magnet-sensor = &magnet_sensor;
		accel-int = &accel_int;
		accel-int2 = &accel_int2;
		spi-fram = &fram0;
		spi-accel = &accel0;
		rtc = &rtc0;
	};

	/* Standard VDD measurement for battery monitoring */
	zephyr,user {
		io-channels = <&adc 1>;
	};
};

&gpio0 {
	status = "okay";
};

&gpio1 {
	status = "okay";
};

&gpiote {
	status = "okay";
};

&rtc0 {
	status = "okay";
};

&wdt0 {
	status = "okay";
};

&temp {
	status = "okay";
	label = "TEMP_0";
};

&spi0 {
	compatible = "nordic,nrf-spim";
	status = "okay";
	
	pinctrl-0 = <&spi0_default>;
	pinctrl-1 = <&spi0_sleep>;
	pinctrl-names = "default", "sleep";
	
	cs-gpios = <&gpio1 13 GPIO_ACTIVE_LOW>,  /* FRAM CS */
		   <&gpio0 5 GPIO_ACTIVE_LOW>;   /* Accelerometer CS */
	
	fram0: fram@0 {
		/* FRAM is not a JEDEC SPI-NOR flash; expose as a generic SPI device */
		compatible = "zephyr,spi-device";
		reg = <0>;
		spi-max-frequency = <8000000>;
		label = "FRAM0";
	};

	/* LIS2DH12 accelerometer - using custom driver */
	accel0: accel@1 {
		compatible = "st,lis2dh12-spi";
		reg = <1>;
		spi-max-frequency = <8000000>;
		label = "LIS2DH12";
	};
};

&adc {
	status = "okay";
	
	#address-cells = <1>;
	#size-cells = <0>;
	
	channel@0 {
		reg = <0>;
		zephyr,gain = "ADC_GAIN_1_6";
		zephyr,reference = "ADC_REF_INTERNAL";
		zephyr,acquisition-time = <ADC_ACQ_TIME_DEFAULT>;
		zephyr,input-positive = <NRF_SAADC_AIN1>; /* P0.03 */
		zephyr,input-negative = <NRF_SAADC_AIN0>; /* P0.02 */
		zephyr,resolution = <12>;
		zephyr,oversampling = <8>;
	};

	/* VDD measurement for battery monitoring */
	channel@1 {
		reg = <1>;
		zephyr,gain = "ADC_GAIN_1_6";
		zephyr,reference = "ADC_REF_INTERNAL";
		zephyr,acquisition-time = <ADC_ACQ_TIME(ADC_ACQ_TIME_MICROSECONDS, 40)>;
		zephyr,input-positive = <NRF_SAADC_VDD>;
		zephyr,resolution = <14>;
		zephyr,oversampling = <8>;
	};
};

/* Flash partitions for MCUboot - using Nordic standard layout */
&flash0 {
	partitions {
		compatible = "fixed-partitions";
		#address-cells = <1>;
		#size-cells = <1>;

		boot_partition: partition@0 {
			label = "mcuboot";
			reg = <0x0 0x10000>;
		};
		slot0_partition: partition@10000 {
			label = "image-0";
			reg = <0x10000 0x74000>;
		};
		slot1_partition: partition@84000 {
			label = "image-1";
			reg = <0x84000 0x74000>;
		};
		storage_partition: partition@f8000 {
			label = "storage";
			reg = <0xf8000 0x8000>;
		};
	};
};